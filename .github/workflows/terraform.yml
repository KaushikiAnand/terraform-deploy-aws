on:
    push:
        branches:
            - main

name: Terraform Deploy AWS

jobs:
    terraform:
        runs-on: ubuntu-latest

        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
            AWS_REGION: us-west-2

        steps:
        - name: Checkout repository
          uses: actions/checkout@v3
    
        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.6.0

        - name: Fetch latest Ubuntu AMI ID
          run: |
            AMI_ID=$(aws ec2 describe-images \
            --region $AWS_REGION \
            --owners 099720109477 \
            --filters "Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*" \
            --query 'Images | sort_by(@, &CreationDate) | [-1].ImageId' \
            --output text)
            echo "ubuntu_ami_id=$AMI_ID" >> $GITHUB_ENV
    
        - name: Initialize Terraform
          run: terraform init
          working-directory: environment/prod
    
        - name: Validate Terraform configuration
          run: terraform validate
          working-directory: environment/prod
    
        - name: Plan Terraform deployment
          run: terraform plan -out=tfplan -var="aws_region=${AWS_REGION}" -var="ubuntu_ami_id=${ubuntu_ami_id}"
          working-directory: environment/prod
    
        - name: Apply Terraform deployment
          run: terraform apply -auto-approve tfplan -var="aws_region=${AWS_REGION}" -var="ubuntu_ami_id=${ubuntu_ami_id}"
          working-directory: environment/prod
